http {
  proxy-host = "127.0.0.1"
  proxy-host = ${?HTTP_PROXY_HOST}

  proxy-port = 8888
  proxy-port = ${?HTTP_PROXY_PORT}

  # Internal buffer size of the blaze client.
  buffer-size = 8192
  buffer-size = ${?HTTP_BUFFER_SIZE}

  # Maximum connections the client will have at any specific time.
  max-total-connections = 16384
  max-total-connections = ${?HTTP_MAX_TOTAL_CONNECTIONS}

  # Map of [[RequestKey]] to number of max connections.
  max-total-connections-per-host = 8192
  max-total-connections-per-host = ${?HTTP_MAX_TOTAL_CONNECTIONS_PER_HOST}

  # Maximum number of requests waiting for a connection at any specific time.
  max-wait-queue-limit = 1024
  max-wait-queue-limit = ${?HTTP_MAX_WAIT_QUEUE_LIMIT}

  # Duration that a connection can wait without traffic being read or written before timeout.
  idle-timeout = 2 minutes
  idle-timeout = ${?HTTP_IDLE_TIMEOUT}

  connect-timeout = 5 seconds
  connect-timeout = ${?HTTP_CONNECT_TIMEOUT}

  # Maximum duration from the submission of a request through reading the body before a timeout.
  request-timeout = 15 seconds
  request-timeout = ${?HTTP_REQUEST_TIMEOUT}

  request-max-total-attempts = 5
  request-max-total-attempts = ${?HTTP_REQUEST_MAX_TOTAL_ATTEMPTS}

  request-max-delay-between-attempts = 800 milliseconds
  request-max-delay-between-attempts = ${?HTTP_REQUEST_MAX_DELAY_BETWEEN_ATTEMPTS}
}

kafka {
  # A list of host/port pairs to use for establishing the initial connection to the Kafka cluster.
  bootstrap-servers = "localhost:9092"
  bootstrap-servers = ${?KAFKA_BOOTSTRAP_SERVERS}
}

schema-registry {
  # Comma-separated list of URLs for schema registry instances that can be used to register or look up schemas.
  url = "http://localhost:8081"
  url = ${?SCHEMA_REGISTRY_BASE_URL}
}

kafka-consumer {
  # A unique string that identifies the consumer group this consumer belongs to.
  group-id = "marketplace_handler-v1"
  group-id = ${?HANDLER_KAFKA_CONSUMER_GROUP_ID}

  # The topics to which the consumer should subscribe.
  topic = "marketplace_handler-commands-handle_ozon_request-version_2"
  topic = ${?HANDLER_KAFKA_CONSUMER_TOPIC}

  # If true the consumer's offset will be periodically committed in the background.
  enable-auto-commit = true
  enable-auto-commit = ${?HANDLER_KAFKA_CONSUMER_ENABLE_AUTO_COMMIT}

  # The maximum number of records returned in a single call to poll().
  max-poll-records = 1024
  max-poll-records = ${?HANDLER_KAFKA_CONSUMER_MAX_POLL_RECORDS}

  # The maximum delay between invocations of poll() when using consumer group management.
  max-poll-interval = 5 minutes
  max-poll-interval = ${?HANDLER_KAFKA_CONSUMER_MAX_POLL_INTERVAL}

  # FS2 Kafka. The timeout for offset commits.
  commit-timeout = 320 seconds
  commit-timeout = ${?HANDLER_KAFKA_CONSUMER_COMMIT_TIMEOUT}

  # FS2 Kafka. Commits offsets in batches of every `commit-every-n-offsets` offsets or ...
  commit-every-n-offsets = 256
  commit-every-n-offsets = ${?HANDLER_KAFKA_CONSUMER_COMMIT_EVERY_N_OFFSETS}

  # ... time window of length `commit-time-window`, whichever happens first.
  commit-time-window = 3200 milliseconds
  commit-time-window = ${?HANDLER_KAFKA_CONSUMER_COMMIT_TIME_WINDOW}

  max-concurrent-per-topic = 1024
  max-concurrent-per-topic = ${?HANDLER_KAFKA_CONSUMER_MAX_CONCURRENT_PER_TOPIC}
}

kafka-producer {
  # The topic to which the record should be produced.
  topic {
    events = "marketplace_handler-events-ozon_request_handled-version_1"
    events = ${?HADNLER_KAFKA_PRODUCER_TOPIC_EVENTS}
  }

  # The compression type for all data generated by the producer.
  compression-type = "zstd"
  compression-type = ${?HANDLER_KAFKA_PRODUCER_COMPRESSION_TYPE}

  # This configuration controls the default batch size in bytes.
  batch-size = 1048576 # 1MiB
  batch-size = ${?HANDLER_KAFKA_PRODUCER_BATCH_SIZE}

  # This setting gives the upper bound on the delay for batching.
  linger = 3200 milliseconds
  linger = ${?HANDLER_KAFKA_PRODUCER_LINGER}

  # FS2 Kafka. The max number of [[ProducerRecords]] to produce in the same batch when using the produce pipe.
  parallelism = 2048
  parallelism = ${?HANDLER_KAFKA_PRODUCER_PARALLELISM}
}

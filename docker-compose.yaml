version: "3.8"

services:

  zookeeper:
    image: 'docker.io/confluentinc/cp-zookeeper:6.0.1'
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - './.persistence/zookeeper/log:/var/lib/zookeeper/log'
      - './.persistence/zookeeper/data:/var/lib/zookeeper/data'
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: 'docker.io/confluentinc/cp-kafka:6.0.1'
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    volumes:
      - './.persistence/kafka/data:/var/lib/kafka/data'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  clickhouse-server:
    image: 'docker.io/yandex/clickhouse-server:latest'
    hostname: clickhouse-server
    container_name: clickhouse-server
    ports:
      - '8123:8123'
      - '9000:9000'
    ulimits:
      nofile: 262144
    volumes:
      - "./.persistence/clickhouse/data:/var/lib/clickhouse"
      - "./.persistence/clickhouse/log:/var/log/clickhouse-server"
      - "./.clickhouse/V1__Initial_version.sql:/docker-entrypoint-initdb.d/V1__Initial_version.sql"
      - "./.clickhouse/config/users.xml:/etc/clickhouse-server/users.xml"
    depends_on:
      - broker

  clickhouse-client:
    image: 'docker.io/yandex/clickhouse-client:latest'
    container_name: clickhouse-client
    entrypoint:
      - /bin/sleep
    command:
      - infinity
    depends_on:
      - clickhouse-server

